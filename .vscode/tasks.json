{
  "version": "2.0.0",
  "tasks": [
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Regular",
      "args": ["--features", "bevy/dynamic_linking", "--", "--mode", "regular"],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Custom",
      "args": ["--features", "bevy/dynamic_linking", "--", "--mode", "custom"],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Shop",
      "args": ["--features", "bevy/dynamic_linking", "--", "--mode", "shop"],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Editor",
      "args": ["--features", "bevy/dynamic_linking", "--", "--mode", "editor"],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Incubator",
      "args": [
        "--features",
        "bevy/dynamic_linking",
        "--",
        "--mode",
        "incubator"
      ],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Migration Download",
      "args": [
        "--features",
        "bevy/dynamic_linking",
        "--",
        "--mode",
        "migration-download"
      ],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Migration Upload",
      "args": [
        "--features",
        "bevy/dynamic_linking",
        "--",
        "--mode",
        "migration-upload"
      ],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Test Scenarios",
      "args": ["--features", "bevy/dynamic_linking", "--", "--mode", "test"],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Single Test Scenario",
      "args": [
        "--",
        "--mode",
        "test",
        "--extra",
        "ron/scenarios/siphon_limit.scenario.ron"
      ],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Admin",
      "args": ["--", "--mode", "admin"],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Sync Assets",
      "args": ["--features", "bevy/dynamic_linking", "--", "--mode", "sync"],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Offline",
      "args": ["--features", "bevy/dynamic_linking", "--", "--mode", "offline"],
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "run",
      "problemMatcher": ["$rustc"],
      "label": "Query",
      "args": ["--features", "bevy/dynamic_linking", "--", "--mode", "query"],
      "group": {
        "kind": "build"
      }
    },
    {
      "label": "Format Ron",
      "type": "shell",
      "group": {
        "kind": "build"
      },
      "command": "find ./assets/ron/. -iname '*.ron' -exec ronfmt -w 80 \"{}\" \\;; rm ./assets/ron/**/*.bak;"
    },
    {
      "label": "STDB: Publish",
      "type": "shell",
      "group": {
        "kind": "build"
      },
      "command": "spacetime publish aoidev -p server -y"
    },
    {
      "label": "STDB: Publish & Clear",
      "type": "shell",
      "group": {
        "kind": "build"
      },
      "command": "spacetime publish -c aoidev -p server -y"
    },
    {
      "label": "STDB: Start",
      "type": "shell",
      "group": {
        "kind": "build"
      },
      "command": "spacetime start --listen-addr 127.0.0.1:3001"
    },
    {
      "label": "STDB: Generate Bindings",
      "type": "shell",
      "group": {
        "kind": "build"
      },
      "command": "spacetime generate --lang rust --out-dir src/stdb --project-path server"
    },
    {
      "label": "STDB: Run SQL",
      "type": "shell",
      "group": {
        "kind": "build"
      },
      "command": "spacetime sql aoi_dev --interactive"
    },
    {
      "label": "Flamegraph: Run Debug",
      "type": "shell",
      "group": {
        "kind": "build"
      },
      "command": "sudo cargo flamegraph --package client --dev -- --mode regular"
    },
    {
      "label": "Flamegraph: Run Release",
      "type": "shell",
      "group": {
        "kind": "build"
      },
      "command": "sudo cargo flamegraph"
    },
    {
      "label": "Mac lipo",
      "type": "shell",
      "group": {
        "kind": "build"
      },
      "command": "mkdir -p target/ArenaOfIdeas.app/Contents/MacOS/; lipo \"target/x86_64-apple-darwin/release/arena-of-ideas\" \"target/aarch64-apple-darwin/release/arena-of-ideas\" -create -output \"target/ArenaOfIdeas.app/Contents/MacOS/ArenaOfIdeas\""
    },
    {
      "label": "Mac Build & lipo",
      "type": "shell",
      "group": {
        "kind": "build"
      },
      "command": "cargo build --release --target x86_64-apple-darwin; cargo build --release --target aarch64-apple-darwin; mkdir -p target/ArenaOfIdeas.app/Contents/MacOS/; lipo \"target/x86_64-apple-darwin/release/arena-of-ideas\" \"target/aarch64-apple-darwin/release/arena-of-ideas\" -create -output \"target/ArenaOfIdeas.app/Contents/MacOS/ArenaOfIdeas\""
    },
    {
      "type": "cargo",
      "command": "build",
      "args": ["--release"],
      "problemMatcher": ["$rustc"],
      "label": "Build Mac",
      "group": {
        "kind": "build"
      }
    },
    {
      "type": "cargo",
      "command": "build",
      "args": ["--release", "--target", "x86_64-pc-windows-msvc"],
      "problemMatcher": ["$rustc"],
      "label": "Build Win",
      "group": {
        "kind": "build"
      }
    }
  ]
}
